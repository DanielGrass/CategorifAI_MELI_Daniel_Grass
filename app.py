import streamlit as st
from modules.theme_toggle import initialize_theme,toggle_theme, apply_styles

# Inicializar el estado del tema
initialize_theme()

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="CategorifAI", page_icon=":bar_chart:", layout="wide")

# Aplicar los estilos seg√∫n el modo seleccionado
apply_styles()

# URL del logo
logo_url = "https://http2.mlstatic.com/frontend-assets/ml-web-navigation/ui-navigation/6.6.73/mercadolibre/logo_large_25years@2x.png?width=300"

# Variables para la selecci√≥n de secciones
if 'selected_main' not in st.session_state:
    st.session_state.selected_main = None
    
# Barra lateral con el logo y men√∫
with st.sidebar:
    st.image(logo_url, use_column_width=True)  # Muestra el logo desde la URL
    st.title("Men√∫ Principal")
      
    # Bot√≥n para cambiar entre modo claro y oscuro con √≠conos de sol y luna
    theme_button = "üåô" if not st.session_state.dark_mode else "‚òÄÔ∏è"
    st.button(theme_button, on_click=toggle_theme)

    # Botones principales para secciones
    if st.button("Requerido"):
        st.session_state.selected_main = "Requerido"

    if st.button("Deseable"):
        st.session_state.selected_main = "Deseable"

    if st.button("Bonus"):
        st.session_state.selected_main = "Bonus"

# Men√∫ horizontal a la derecha basado en la selecci√≥n
st.title("Data Science Technical Challenge - CategorifAI")
st.subheader("Presentado por: Daniel Grass")
if st.session_state.selected_main:


    # Mostrar un men√∫ horizontal seg√∫n la selecci√≥n del bot√≥n principal
    if st.session_state.selected_main == "Requerido":
        menu_options = st.radio(
            "Opciones de Requerido",
            options=["Data QA", "Reporting", "Machine Learning"],
            horizontal=True
        )

        # Mostrar el contenido correspondiente
        if menu_options == "Data QA":
            st.header("Data QA")
            st.write("Se debe chequear la calidad del dataset para hacer una evaluaci√≥n de qu√© tan apropiados son los datos para tareas de Data Science.")
            st.write("Proponga un conjunto de correcciones en los datos de ser necesario.")

        elif menu_options == "Reporting":
            st.header("Reporting")
            st.write("Documente los resultados e insights obtenidos durante la exploraci√≥n y describa conclusiones desde una perspectiva de negocio, soportado por gr√°ficos, tablas, y m√©tricas.")

        elif menu_options == "Machine Learning":
            st.header("Machine Learning")
            st.write("Describa las posibles tareas de Machine Learning que podr√≠an realizarse desde el dataset dado, que podr√≠an ser valiosas en el dominio dado (s√≥lo explicar, no entrenar un modelo).")

    elif st.session_state.selected_main == "Deseable":
        menu_options = st.radio(
            "Opciones de Deseable",
            options=["Versionado de C√≥digo", "Feature Engineering", "Modelo Predictivo", "Mostrar Skills en Python", "Casos de Uso", "M√©tricas"],
            horizontal=True
        )

        # Mostrar el contenido correspondiente
        if menu_options == "Versionado de C√≥digo":
            st.header("Versionado de C√≥digo")
            st.write("Versionado de c√≥digo con Git (incluso puede publicarse en tu cuenta personal de GitHub).")

        elif menu_options == "Feature Engineering":
            st.header("Feature Engineering")
            st.write("Indicar y calcular posibles candidatos de features que podr√≠an utilizarse tanto columnas originales y transformaciones.")

        elif menu_options == "Modelo Predictivo":
            st.header("Modelo Predictivo")
            st.write("Realice un modelo predictivo.")

        elif menu_options == "Mostrar Skills en Python":
            st.header("Mostrar Skills en Python")
            st.write("Teniendo buenas pr√°cticas en la estructura del c√≥digo y la documentaci√≥n.")

        elif menu_options == "Casos de Uso":
            st.header("Casos de Uso")
            st.write("Describir posibles casos de uso a tratar con este dataset que podr√≠an agregar valor al negocio dado, indicando m√©todos, t√©cnicas, y algoritmos por cada uno de ellos, as√≠ como justificando las decisiones tomadas.")

        elif menu_options == "M√©tricas":
            st.header("M√©tricas")
            st.write("Definir y calcular las m√©tricas que considere m√°s relevantes para la problem√°tica propuesta.")

    elif st.session_state.selected_main == "Bonus":
        menu_options = st.radio(
            "Opciones de Bonus",
            options=["Manejo de Environment de Desarrollo", "Identificar Nuevos Atributos"],
            horizontal=True
        )

        # Mostrar el contenido correspondiente
        if menu_options == "Manejo de Environment de Desarrollo":
            st.header("Manejo de Environment de Desarrollo")
            st.write("Manejo de environment de desarrollo mediante alguna tecnolog√≠a (e.g. Docker, virtualenv, conda).")

        elif menu_options == "Identificar Nuevos Atributos":
            st.header("Identificar Nuevos Atributos")
            st.write("Identificar nuevos atributos / tablas que podr√≠an ser relevantes o necesarias para un mejor an√°lisis.")